service: chill
provider:
  name: aws
  runtime: nodejs8.10
  memorySize: 128
  environment:
    databaseEndpoint:
      Fn::GetAtt: [connectionsdatabase, Endpoint.Address] # this is how the Lambda can get the dynamically generated endpoint for your rds instance
    databaseUsername: ${file(env.yml):databaseUsername}
    databasePassword: ${file(env.yml):databasePassword}
    databaseName: ${file(env.yml):databaseName}
  iamRoleStatements:
    - Effect: Allow
      Action: "*"
      Resource: "arn:aws:rds:${self:provider.region}:*:db/${file(env.yml):databaseInstance}"
stage: dev
region: us-east-1

functions:
  connect:
    handler: handler.connect
    events:
      - websocket:
          route: $connect
  disconnect:
    handler: handler.disconnect
    events:
      - websocket:
          route: $disconnect
  default:
    handler: handler.default
    events:
      - websocket:
          route: $default

resources:
  Resources:
    connectionsdatabase:
      Type: AWS::RDS::DBInstance
      Properties:
        DBInstanceClass: db.t2.micro
        DBInstanceIdentifier: ${file(env.yml):databaseInstance)}
        Engine: MySQL
        AllocatedStorage: 5
        DBName: ${file(env.yml):databaseName}
        MasterUsername: ${file(env.yml):databaseUsername}
        MasterUserPassword: ${file(env.yml):databasePassword}
